package ImportadorNTS;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author LAB
 */
public final class Main extends javax.swing.JFrame {

    ArrayList<Produtos> produtos;
    ProdutosCheck checkBox;
    String SQL;

    public Main() throws ClassNotFoundException, SQLException, IOException {
        initComponents();
        LerArquivoProperties();
        checkBox = verificarCheckBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        txtCodProd = new javax.swing.JTextField();
        txtDescricao = new javax.swing.JTextField();
        txtCodBarras = new javax.swing.JTextField();
        txtCodFabrica = new javax.swing.JTextField();
        txtComplemento = new javax.swing.JTextField();
        txtPCompra = new javax.swing.JTextField();
        txtPVenda = new javax.swing.JTextField();
        txtNCM = new javax.swing.JTextField();
        txtCEST = new javax.swing.JTextField();
        txtCSOSN = new javax.swing.JTextField();
        txtArtFiscal = new javax.swing.JTextField();
        txtOrigem = new javax.swing.JTextField();
        txtPIS = new javax.swing.JTextField();
        txtCOFINS = new javax.swing.JTextField();
        txtIPI = new javax.swing.JTextField();
        txtQtdEstoque = new javax.swing.JTextField();
        chkCodProd = new javax.swing.JCheckBox();
        chkDescricao = new javax.swing.JCheckBox();
        chkCodBarras = new javax.swing.JCheckBox();
        chkCodFabrica = new javax.swing.JCheckBox();
        chkComplemento = new javax.swing.JCheckBox();
        chkPCompra = new javax.swing.JCheckBox();
        chkPVenda = new javax.swing.JCheckBox();
        chkNCM = new javax.swing.JCheckBox();
        chkCEST = new javax.swing.JCheckBox();
        chkCSOSN = new javax.swing.JCheckBox();
        chkArtFiscal = new javax.swing.JCheckBox();
        chkOrigem = new javax.swing.JCheckBox();
        chkCOFINS = new javax.swing.JCheckBox();
        chkPIS = new javax.swing.JCheckBox();
        chkIPI = new javax.swing.JCheckBox();
        chkQtdEstoque = new javax.swing.JCheckBox();
        btnGravarParametros = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        txtPathCSV = new javax.swing.JTextField();
        txtPathBD = new javax.swing.JTextField();
        btnPathCSV = new javax.swing.JButton();
        btnPathBD = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnLerCSV = new javax.swing.JButton();
        btnIniciarImport = new javax.swing.JButton();
        chkMarca = new javax.swing.JCheckBox();
        txtMarca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JaumImport");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        label1.setText("Colunas");

        chkCodProd.setText("Cod Prod");
        chkCodProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCodProdMouseClicked(evt);
            }
        });

        chkDescricao.setText("Descricao");
        chkDescricao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkDescricaoMouseClicked(evt);
            }
        });

        chkCodBarras.setText("Cod Barras");
        chkCodBarras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCodBarrasMouseClicked(evt);
            }
        });

        chkCodFabrica.setText("Cod Fabrica");
        chkCodFabrica.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCodFabricaMouseClicked(evt);
            }
        });

        chkComplemento.setText("Complemento");
        chkComplemento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkComplementoMouseClicked(evt);
            }
        });

        chkPCompra.setText("Prec Compra");
        chkPCompra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkPCompraMouseClicked(evt);
            }
        });

        chkPVenda.setText("Prec Venda");
        chkPVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkPVendaMouseClicked(evt);
            }
        });

        chkNCM.setText("NCM");
        chkNCM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkNCMMouseClicked(evt);
            }
        });

        chkCEST.setText("CEST");
        chkCEST.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCESTMouseClicked(evt);
            }
        });

        chkCSOSN.setText("CSOSN");
        chkCSOSN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCSOSNMouseClicked(evt);
            }
        });

        chkArtFiscal.setText("Art Fiscal");
        chkArtFiscal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkArtFiscalMouseClicked(evt);
            }
        });

        chkOrigem.setText("Origem");
        chkOrigem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkOrigemMouseClicked(evt);
            }
        });

        chkCOFINS.setText("COFINS");
        chkCOFINS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkCOFINSMouseClicked(evt);
            }
        });

        chkPIS.setText("PIS");
        chkPIS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkPISMouseClicked(evt);
            }
        });

        chkIPI.setText("IPI");
        chkIPI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkIPIMouseClicked(evt);
            }
        });

        chkQtdEstoque.setText("Qtd Estoque");
        chkQtdEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkQtdEstoqueMouseClicked(evt);
            }
        });

        btnGravarParametros.setText("Gravar Parametros");
        btnGravarParametros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGravarParametrosMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkPCompra)
                    .addComponent(chkPVenda)
                    .addComponent(chkNCM)
                    .addComponent(chkCEST)
                    .addComponent(chkCSOSN)
                    .addComponent(chkArtFiscal)
                    .addComponent(chkOrigem)
                    .addComponent(chkCOFINS)
                    .addComponent(chkPIS)
                    .addComponent(chkCodBarras)
                    .addComponent(chkComplemento)
                    .addComponent(chkCodFabrica)
                    .addComponent(chkIPI)
                    .addComponent(chkQtdEstoque)
                    .addComponent(chkCodProd)
                    .addComponent(chkDescricao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtIPI, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(txtCOFINS, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPIS, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtOrigem, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtArtFiscal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCSOSN, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCEST, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtNCM, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPVenda, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPCompra, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCodFabrica, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCodBarras, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCodProd, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtQtdEstoque))
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGravarParametros)
                .addGap(35, 35, 35))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCodProd))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkDescricao))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCodBarras))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodFabrica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCodFabrica))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkComplemento))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPCompra))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPVenda))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNCM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkNCM))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCEST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCEST))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCSOSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCSOSN))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArtFiscal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkArtFiscal))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkOrigem))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPIS))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCOFINS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCOFINS))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkIPI))
                .addGap(1, 1, 1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQtdEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkQtdEstoque))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(btnGravarParametros)
                .addContainerGap())
        );

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtLog);

        btnPathCSV.setText("...");
        btnPathCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPathCSVActionPerformed(evt);
            }
        });

        btnPathBD.setText("...");
        btnPathBD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPathBDActionPerformed(evt);
            }
        });

        jLabel1.setText("Caminho do arquivo CSV:");

        jLabel2.setText("Caminho do BD Firebird:");

        btnLerCSV.setText("1º Ler Arquivo CSV");
        btnLerCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLerCSVActionPerformed(evt);
            }
        });

        btnIniciarImport.setText("2º Iniciar Importação");
        btnIniciarImport.setEnabled(false);
        btnIniciarImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarImportActionPerformed(evt);
            }
        });

        chkMarca.setText("Concatenar Marca:");
        chkMarca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkMarcaMouseClicked(evt);
            }
        });

        txtMarca.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPathBD)
                                    .addComponent(txtPathCSV))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnPathCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnPathBD, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(btnLerCSV, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(btnIniciarImport, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(chkMarca)
                                .addGap(18, 18, 18)
                                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 61, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkMarca))
                        .addGap(26, 26, 26)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPathCSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPathCSV))
                        .addGap(18, 18, 18)
                        .addComponent(btnLerCSV)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPathBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPathBD))
                        .addGap(18, 18, 18)
                        .addComponent(btnIniciarImport)
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 102));
        jLabel3.setText("**** Considerar Numero de Colunas apartir de 0 ****");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkCodProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCodProdMouseClicked
        if (chkCodProd.isSelected()) {
            txtCodProd.setEnabled(true);
        } else {
            txtCodProd.setEnabled(false);
        }
    }//GEN-LAST:event_chkCodProdMouseClicked

    private void chkDescricaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkDescricaoMouseClicked
        if (chkDescricao.isSelected()) {
            txtDescricao.setEnabled(true);
        } else {
            txtDescricao.setEnabled(false);
        }
    }//GEN-LAST:event_chkDescricaoMouseClicked

    private void chkCodBarrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCodBarrasMouseClicked
        if (chkCodBarras.isSelected()) {
            txtCodBarras.setEnabled(true);
        } else {
            txtCodBarras.setEnabled(false);
        }
    }//GEN-LAST:event_chkCodBarrasMouseClicked

    private void chkCodFabricaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCodFabricaMouseClicked
        if (chkCodFabrica.isSelected()) {
            txtCodFabrica.setEnabled(true);
        } else {
            txtCodFabrica.setEnabled(false);
        }
    }//GEN-LAST:event_chkCodFabricaMouseClicked

    private void chkComplementoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkComplementoMouseClicked
        if (chkComplemento.isSelected()) {
            txtComplemento.setEnabled(true);
        } else {
            txtComplemento.setEnabled(false);
        }
    }//GEN-LAST:event_chkComplementoMouseClicked

    private void chkPCompraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkPCompraMouseClicked
        if (chkPCompra.isSelected()) {
            txtPCompra.setEnabled(true);
        } else {
            txtPCompra.setEnabled(false);
        }
    }//GEN-LAST:event_chkPCompraMouseClicked

    private void chkPVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkPVendaMouseClicked
        if (chkPVenda.isSelected()) {
            txtPVenda.setEnabled(true);
        } else {
            txtPVenda.setEnabled(false);
        }
    }//GEN-LAST:event_chkPVendaMouseClicked

    private void chkNCMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkNCMMouseClicked
        if (chkNCM.isSelected()) {
            txtNCM.setEnabled(true);
        } else {
            txtNCM.setEnabled(false);
        }
    }//GEN-LAST:event_chkNCMMouseClicked

    private void chkCESTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCESTMouseClicked
        if (chkCEST.isSelected()) {
            txtCEST.setEnabled(true);
        } else {
            txtCEST.setEnabled(false);
        }
    }//GEN-LAST:event_chkCESTMouseClicked

    private void chkCSOSNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCSOSNMouseClicked
        if (chkCSOSN.isSelected()) {
            txtCSOSN.setEnabled(true);
        } else {
            txtCSOSN.setEnabled(false);
        }
    }//GEN-LAST:event_chkCSOSNMouseClicked

    private void chkArtFiscalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkArtFiscalMouseClicked
        if (chkArtFiscal.isSelected()) {
            txtArtFiscal.setEnabled(true);
        } else {
            txtArtFiscal.setEnabled(false);
        }
    }//GEN-LAST:event_chkArtFiscalMouseClicked

    private void chkOrigemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkOrigemMouseClicked
        if (chkOrigem.isSelected()) {
            txtOrigem.setEnabled(true);
        } else {
            txtOrigem.setEnabled(false);
        }
    }//GEN-LAST:event_chkOrigemMouseClicked

    private void chkPISMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkPISMouseClicked
        if (chkPIS.isSelected()) {
            txtPIS.setEnabled(true);
        } else {
            txtPIS.setEnabled(false);
        }
    }//GEN-LAST:event_chkPISMouseClicked

    private void chkCOFINSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkCOFINSMouseClicked
        if (chkCOFINS.isSelected()) {
            txtCOFINS.setEnabled(true);
        } else {
            txtCOFINS.setEnabled(false);
        }
    }//GEN-LAST:event_chkCOFINSMouseClicked

    private void chkIPIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkIPIMouseClicked
        if (chkIPI.isSelected()) {
            txtIPI.setEnabled(true);
        } else {
            txtIPI.setEnabled(false);
        }
    }//GEN-LAST:event_chkIPIMouseClicked

    private void chkQtdEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkQtdEstoqueMouseClicked
        if (chkQtdEstoque.isSelected()) {
            txtQtdEstoque.setEnabled(true);
        } else {
            txtQtdEstoque.setEnabled(false);
        }
    }//GEN-LAST:event_chkQtdEstoqueMouseClicked

    private void btnGravarParametrosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGravarParametrosMouseClicked
        try {
            Properties props = ManipuladorProperties.returnProperties();
            if (chkCodProd.isSelected()) {
                props.setProperty("prop.cod_produto", txtCodProd.getText());
            } else {
                props.setProperty("prop.cod_produto", "");
            }
            if (chkDescricao.isSelected()) {
                props.setProperty("prop.descricao", txtDescricao.getText());
            } else {
                props.setProperty("prop.descricao", "");
            }
            if (chkCodBarras.isSelected()) {
                props.setProperty("prop.cod_barras", txtCodBarras.getText());
            } else {
                props.setProperty("prop.cod_barras", "");
            }
            if (chkCodFabrica.isSelected()) {
                props.setProperty("prop.cod_fabrica", txtCodFabrica.getText());
            } else {
                props.setProperty("prop.cod_fabrica", "");
            }
            if (chkComplemento.isSelected()) {
                props.setProperty("prop.complemento", txtComplemento.getText());
            } else {
                props.setProperty("prop.complemento", "");
            }
            if (chkPCompra.isSelected()) {
                props.setProperty("prop.preco_compra", txtPCompra.getText());
            } else {
                props.setProperty("prop.preco_compra", "");
            }
            if (chkPVenda.isSelected()) {
                props.setProperty("prop.preco_venda", txtPVenda.getText());
            } else {
                props.setProperty("prop.preco_venda", "");
            }
            if (chkNCM.isSelected()) {
                props.setProperty("prop.ncm", txtNCM.getText());
            } else {
                props.setProperty("prop.ncm", "");
            }
            if (chkCEST.isSelected()) {
                props.setProperty("prop.cest", txtCEST.getText());
            } else {
                props.setProperty("prop.cest", "");
            }
            if (chkCSOSN.isSelected()) {
                props.setProperty("prop.csosn", txtCSOSN.getText());
            } else {
                props.setProperty("prop.csosn", "");
            }
            if (chkArtFiscal.isSelected()) {
                props.setProperty("prop.art_fiscal", txtArtFiscal.getText());
            } else {
                props.setProperty("prop.art_fiscal", "");
            }
            if (chkOrigem.isSelected()) {
                props.setProperty("prop.origem", txtOrigem.getText());
            } else {
                props.setProperty("prop.origem", "");
            }
            if (chkPIS.isSelected()) {
                props.setProperty("prop.pis", txtPIS.getText());
            } else {
                props.setProperty("prop.pis", "");
            }
            if (chkCOFINS.isSelected()) {
                props.setProperty("prop.cofins", txtCOFINS.getText());
            } else {
                props.setProperty("prop.cofins", "");
            }
            if (chkIPI.isSelected()) {
                props.setProperty("prop.ipi", txtIPI.getText());
            } else {
                props.setProperty("prop.ipi", "");
            }
            if (chkQtdEstoque.isSelected()) {
                props.setProperty("prop.qtd_estoque", txtQtdEstoque.getText());
            } else {
                props.setProperty("prop.qtd_estoque", "");
            }
            ManipuladorProperties.gravarProperties(props);
            txtLog.append("Parametros Gravados\n");
            checkBox = verificarCheckBox();

        } catch (IOException ex) {
            txtLog.append(ex.getMessage());
        }
    }//GEN-LAST:event_btnGravarParametrosMouseClicked

    private void btnPathBDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPathBDActionPerformed
        JFileChooser chooserBD = new JFileChooser("c:\\Workspace");
        int escolha = chooserBD.showOpenDialog(getParent());
        String pathBD = chooserBD.getSelectedFile().getAbsolutePath();
        Properties props;
        try {
            props = ManipuladorProperties.returnProperties();
            props.setProperty("prop.path_banco", pathBD);
            ManipuladorProperties.gravarProperties(props);
            txtPathBD.setText(pathBD);
        } catch (IOException ex) {
            txtLog.append(ex.getMessage());
        }

        txtLog.append("Caminho BD Salvo\n");
    }//GEN-LAST:event_btnPathBDActionPerformed

    private void btnPathCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPathCSVActionPerformed
        JFileChooser chooserCSV = new JFileChooser("c:\\Workspace");
        int escolha = chooserCSV.showOpenDialog(getParent());
        String pathCSV = chooserCSV.getSelectedFile().getAbsolutePath();
        Properties props;
        try {
            props = ManipuladorProperties.returnProperties();
            props.setProperty("prop.path_csv", pathCSV);
            ManipuladorProperties.gravarProperties(props);
            txtPathCSV.setText(pathCSV);
        } catch (IOException ex) {
            txtLog.append(ex.getMessage());
        }

        txtLog.append("Caminho CSV Salvo\n");
    }//GEN-LAST:event_btnPathCSVActionPerformed

    private void btnLerCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLerCSVActionPerformed
        ManipuladorCSV csv = new ManipuladorCSV();
        try {
            produtos = csv.lerCSV(checkBox,Main.this);
            SQL = csv.geraSQL(checkBox);
            btnIniciarImport.setEnabled(true);
            //System.out.println(SQL);
        } catch (IOException ex) {
            txtLog.append(ex.getMessage() + "\n");
        }
    }//GEN-LAST:event_btnLerCSVActionPerformed

    private void btnIniciarImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarImportActionPerformed

       // try {
            ManipuladorFirebird fb = new ManipuladorFirebird(SQL);
            new Thread() {
                @Override
                public void run() {
                    try {
                        fb.desativarTrigger();
                        fb.cadastrarProduto(produtos, checkBox,Main.this);
                        fb.ativarTrigger();
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        System.out.println(ex.getErrorCode());
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }

            }.start();
            txtLog.append("Importação Concluida\n");
    }//GEN-LAST:event_btnIniciarImportActionPerformed

    private void chkMarcaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkMarcaMouseClicked
        if (chkMarca.isSelected()) {
            txtMarca.setEnabled(true);
        } else {
            txtMarca.setEnabled(false);
        }
    }//GEN-LAST:event_chkMarcaMouseClicked

    public void LerArquivoProperties() throws IOException {
        Properties props = ManipuladorProperties.returnProperties();
        if (!props.getProperty("prop.cod_produto").equals("")) {
            chkCodProd.setSelected(true);
            txtCodProd.setText(props.getProperty("prop.cod_produto"));
        } else {
            chkCodProd.setSelected(false);
            txtCodProd.setEnabled(false);
        }
        if (!props.getProperty("prop.descricao").equals("")) {
            chkDescricao.setSelected(true);
            txtDescricao.setText(props.getProperty("prop.descricao"));
        } else {
            chkDescricao.setSelected(false);
            txtDescricao.setEnabled(false);
        }
        if (!props.getProperty("prop.cod_barras").equals("")) {
            chkCodBarras.setSelected(true);
            txtCodBarras.setText(props.getProperty("prop.cod_barras"));
        } else {
            chkCodBarras.setSelected(false);
            txtCodBarras.setEnabled(false);
        }
        if (!props.getProperty("prop.cod_fabrica").equals("")) {
            chkCodFabrica.setSelected(true);
            txtCodFabrica.setText(props.getProperty("prop.cod_fabrica"));
        } else {
            chkCodFabrica.setSelected(false);
            txtCodFabrica.setEnabled(false);
        }
        if (!props.getProperty("prop.complemento").equals("")) {
            chkComplemento.setSelected(true);
            txtComplemento.setText(props.getProperty("prop.complemento"));
        } else {
            chkComplemento.setSelected(false);
            txtComplemento.setEnabled(false);
        }
        if (!props.getProperty("prop.preco_compra").equals("")) {
            chkPCompra.setSelected(true);
            txtPCompra.setText(props.getProperty("prop.preco_compra"));
        } else {
            chkPCompra.setSelected(false);
            txtPCompra.setEnabled(false);
        }
        if (!props.getProperty("prop.preco_venda").equals("")) {
            chkPVenda.setSelected(true);
            txtPVenda.setText(props.getProperty("prop.preco_venda"));
        } else {
            chkPVenda.setSelected(false);
            txtPVenda.setEnabled(false);
        }
        if (!props.getProperty("prop.ncm").equals("")) {
            chkNCM.setSelected(true);
            txtNCM.setText(props.getProperty("prop.ncm"));
        } else {
            chkNCM.setSelected(false);
            txtNCM.setEnabled(false);
        }
        if (!props.getProperty("prop.cest").equals("")) {
            chkCEST.setSelected(true);
            txtCEST.setText(props.getProperty("prop.cest"));
        } else {
            chkCEST.setSelected(false);
            txtCEST.setEnabled(false);
        }
        if (!props.getProperty("prop.csosn").equals("")) {
            chkCSOSN.setSelected(true);
            txtCSOSN.setText(props.getProperty("prop.csosn"));
        } else {
            chkCSOSN.setSelected(false);
            txtCSOSN.setEnabled(false);
        }
        if (!props.getProperty("prop.art_fiscal").equals("")) {
            chkArtFiscal.setSelected(true);
            txtArtFiscal.setText(props.getProperty("prop.art_fiscal"));
        } else {
            chkArtFiscal.setSelected(false);
            txtArtFiscal.setEnabled(false);
        }
        if (!props.getProperty("prop.origem").equals("")) {
            chkOrigem.setSelected(true);
            txtOrigem.setText(props.getProperty("prop.origem"));
        } else {
            chkOrigem.setSelected(false);
            txtOrigem.setEnabled(false);
        }
        if (!props.getProperty("prop.pis").equals("")) {
            chkPIS.setSelected(true);
            txtPIS.setText(props.getProperty("prop.pis"));
        } else {
            chkPIS.setSelected(false);
            txtPIS.setEnabled(false);
        }
        if (!props.getProperty("prop.cofins").equals("")) {
            chkCOFINS.setSelected(true);
            txtCOFINS.setText(props.getProperty("prop.cofins"));
        } else {
            chkCOFINS.setSelected(false);
            txtCOFINS.setEnabled(false);
        }
        if (!props.getProperty("prop.ipi").equals("")) {
            chkIPI.setSelected(true);
            txtIPI.setText(props.getProperty("prop.ipi"));
        } else {
            chkIPI.setSelected(false);
            txtIPI.setEnabled(false);
        }
        if (!props.getProperty("prop.qtd_estoque").equals("")) {
            chkQtdEstoque.setSelected(true);
            txtQtdEstoque.setText(props.getProperty("prop.qtd_estoque"));
        } else {
            chkQtdEstoque.setSelected(false);
            txtQtdEstoque.setEnabled(false);
        }
        if (!props.getProperty("prop.path_csv").equals("")) {
            txtPathCSV.setText(props.getProperty("prop.path_csv"));
        }
        if (!props.getProperty("prop.path_banco").equals("")) {
            txtPathBD.setText(props.getProperty("prop.path_banco"));
        }
    }

    public ProdutosCheck verificarCheckBox() {
        return new ProdutosCheck(chkCodProd.isSelected(),
                chkDescricao.isSelected(),
                chkCodBarras.isSelected(),
                chkCodFabrica.isSelected(),
                chkComplemento.isSelected(),
                chkPCompra.isSelected(),
                chkPVenda.isSelected(),
                chkNCM.isSelected(),
                chkCEST.isSelected(),
                chkCSOSN.isSelected(),
                chkArtFiscal.isSelected(),
                chkOrigem.isSelected(),
                chkPIS.isSelected(),
                chkCOFINS.isSelected(),
                chkIPI.isSelected(),
                chkQtdEstoque.isSelected()
        );
    }
    
    public void appendTxtLog(String text){
        txtLog.append("\n"+text);
        txtLog.setCaretPosition(txtLog.getText().length());
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    txtLog.append(ex.getMessage() + "\n");
                } catch (SQLException ex) {
                    txtLog.append(ex.getMessage() + "\n");
                } catch (IOException ex) {
                    try {
                        ManipuladorProperties.criarProperties();
                        new Main().setVisible(true);
                    } catch (IOException ex1) {
                        txtLog.append(ex1.getMessage() + "\n");
                    } catch (ClassNotFoundException ex1) {
                        txtLog.append(ex1.getMessage() + "\n");
                    } catch (SQLException ex1) {
                        txtLog.append(ex1.getMessage() + "\n");
                    }
                }
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGravarParametros;
    private javax.swing.JButton btnIniciarImport;
    private javax.swing.JButton btnLerCSV;
    private javax.swing.JButton btnPathBD;
    private javax.swing.JButton btnPathCSV;
    private javax.swing.JCheckBox chkArtFiscal;
    private javax.swing.JCheckBox chkCEST;
    private javax.swing.JCheckBox chkCOFINS;
    private javax.swing.JCheckBox chkCSOSN;
    private javax.swing.JCheckBox chkCodBarras;
    private javax.swing.JCheckBox chkCodFabrica;
    private javax.swing.JCheckBox chkCodProd;
    private javax.swing.JCheckBox chkComplemento;
    private javax.swing.JCheckBox chkDescricao;
    private javax.swing.JCheckBox chkIPI;
    public static javax.swing.JCheckBox chkMarca;
    private javax.swing.JCheckBox chkNCM;
    private javax.swing.JCheckBox chkOrigem;
    private javax.swing.JCheckBox chkPCompra;
    private javax.swing.JCheckBox chkPIS;
    private javax.swing.JCheckBox chkPVenda;
    private javax.swing.JCheckBox chkQtdEstoque;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JTextField txtArtFiscal;
    private javax.swing.JTextField txtCEST;
    private javax.swing.JTextField txtCOFINS;
    private javax.swing.JTextField txtCSOSN;
    private javax.swing.JTextField txtCodBarras;
    private javax.swing.JTextField txtCodFabrica;
    private javax.swing.JTextField txtCodProd;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtIPI;
    private static javax.swing.JTextArea txtLog;
    public static javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNCM;
    private javax.swing.JTextField txtOrigem;
    private javax.swing.JTextField txtPCompra;
    private javax.swing.JTextField txtPIS;
    private javax.swing.JTextField txtPVenda;
    private static javax.swing.JTextField txtPathBD;
    private static javax.swing.JTextField txtPathCSV;
    private javax.swing.JTextField txtQtdEstoque;
    // End of variables declaration//GEN-END:variables
}
